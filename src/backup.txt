import React, { useEffect, useState }  from 'react'
import styles from './Notes.module.css'
import uuid from "react-uuid";

export default function Sidebar() {
  const [trigger,setTrigger] = useState(false)
  const [newNotes,setNewNotes] = useState({title:"",color:""})
  const [notes,setNotes] = useState([])
  const [isActive,setIsActive] = useState(false)
  const [selectedNote, setSelectedNote] =useState()
  const [newContent,setNewContent] = useState( )
  const [currentDate,setCurrentDate] = useState()
 



  function clickTrigger(){
    setTrigger(true)
  }

  const inputChange = (e) =>{
      setNewNotes({ ...newNotes, title:e.target.value})
  }
  const colorClicked =(e)=>{
      setNewNotes({...newNotes, id:uuid() , color:e.target.value,content:[], date:[] })
  }
  const createNew = () =>{
      setTrigger(false)
      newNotes.title.trim()
      newNotes.color.trim()
      
    console.log("blank: ",newNotes.title)
    if(newNotes.title.length>0 && newNotes.color.length>0){
      console.log("added")
      setNotes([newNotes, ...notes])
      console.log("newNotes: ",newNotes)
      localStorage.setItem(newNotes.title, JSON.stringify([]))
    }
    setNewNotes({...newNotes,title:"", color:""})
  }
  const clickDelete = (deleteId) =>{
    setNotes(notes.filter((item )=>item.id !== deleteId ))
  }

useEffect(() => {
  setSelectedNote(notes.find((item ) => item.id === isActive))
}, [notes,isActive])

const isClicked = (item,index)=>{
  setIsActive(item.id)
  console.log(index)
 
}
  
const contentChange = (e)=>{
  setNewContent( e.target.value)
  setCurrentDate(new Date(Date.now()).toLocaleDateString("en-GB",{
    hour:"2-digit",
    minute:"2-digit",
    second:"2-digit"
  }))
  console.log(currentDate)
}
 
function sendClick(){
  if(newContent.length>0){
    
    console.log(selectedNote)
    const updatedNotesArray = notes.map((item) =>{
      if(item.id === isActive){
        setSelectedNote({...selectedNote,content:[...newContent],date:[...currentDate] })

        setNewContent("")
        return {
          id: selectedNote.id,
          title: selectedNote.title,
          content: [...selectedNote.content, newContent],
          date:[...selectedNote.date,currentDate]
        }
      }
        return item 
    }
    
     )
     setNotes(updatedNotesArray)
  }
}



console.log("notes: ",notes)
console.log("selectedNote", selectedNote)
return ( <>
    <div className={styles.container}>
      <div className={styles.sidebar_container}>
        <button onClick={clickTrigger}>Create</button>
        <div className={styles.group}>


        {notes.map((item,index)=>
          <button className={`${styles.group} ${item.id === isActive && styles.active} `} style={{ display:"block"}} onClick={()=>isClicked(item,index)} key={index} >
            <div style={{borderRadius:"100%",background:`${item.color}`}}>{item.title.substr(0,2)}</div>
            <div>{item.title}</div>
            <button className={styles.delete} onClick={()=>clickDelete(item.id)}>X</button>
          </button>)}
        </div></div>



        <div className={styles.main_container}>

            {selectedNote? 
            <div> 
              <div className={styles.main_title}>{selectedNote.title}</div> 
              <div  className={styles.content}>
                <div style={{display:"flex"}}>
                  <div>
                  {selectedNote.date.map((item)=>
                  
                  <div>
                    <div style={{background:"yellow",margin:"10px",height:"100px"}}>{item}</div>
                  </div>)}</div>
                    
              <div style={{maxWidth:"400px"}}>
              {selectedNote.content.map((item)=><div style={{background:"yellow",margin:"10px",height:"100px"}} className={styles.content_div}>{item}</div>)}</div></div>
              </div>
            </div>
            :<div>create new group</div>}
          {selectedNote?
          <div>
           <textarea name="" id="" cols="30" rows="10" value={newContent} onChange={contentChange}  ></textarea> 
           <button onClick={sendClick}  >send</button></div>

           :<div>
           <textarea name="" id="" cols="30" rows="10" value={newContent} onChange={contentChange} disabled ></textarea> 
           <button onClick={sendClick} disabled >send</button></div>}
        </div>

    </div>

    {(trigger)?
    <div>
        <div className={styles.container_popup}>
            <div className={styles.inner_container_popup}>
            <h2>Create New Notes</h2>
            <div>
            <div style={{display:"inline"}}>Group Name</div>
                <input type="text"  onChange={inputChange}/>
            </div>
            <div>
                <div style={{display:"inline"}}>Choose color</div>  
                <button value={"lavender"} onClick={colorClicked}>lavender</button>
                <button  value={"pink"} onClick={colorClicked}>pink</button> 
                <button value={"lightblue"} onClick={colorClicked}>light blue</button>
                <button  value={"orange"} onClick={colorClicked}>orange</button>
                <button  value={"blue"} onClick={colorClicked}>blue</button>
                <button  value={"purple"} onClick={colorClicked}>purple</button>
            </div>
            <button className={styles.create_popup} onClick={createNew}>Create</button>
        </div>  
        </div>
    </div>:""}</>
  )
}
